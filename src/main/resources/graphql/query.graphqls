type Query {
    item(id: ID!): Item
    items(itemFilter: ItemFilterInput, skip:Int = 0, limit:Int = 100): ItemCollection

    group(id: ID!): GroupItem
    groups(itemFilter: ItemFilterInput, skip:Int = 0, limit:Int = 100): GroupCollection

    thing(id: ID!): Thing
    things(thingFilter: ThingFilterInput, skip:Int = 0, limit:Int = 100): ThingCollection

    tags: [TagEntry!]!
}

type TagEntry {
    name: String!
    items: [Item!]!
}

input ItemFilterInput {
    type: String
    tags: [String!]
    ids: [ID!]
}

input ThingFilterInput {
    ids: [ID!]
    typeId: ID
}

type ItemCollection {
    total: Int!
    skip: Int!
    limit: Int!
    items: [Item!]!
}

type GroupCollection {
    total: Int!
    skip: Int!
    limit: Int!
    items: [GroupItem!]!
}

type ThingCollection {
    total: Int!
    skip: Int!
    limit: Int!
    items: [ThingInterface!]!
}